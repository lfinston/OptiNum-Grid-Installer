@q glblvrbl.web@>
@q Created by Laurence D. Finston (LDF) Mon Sep 28 11:20:04 CEST 2009  @>

@q * (1) Top @>

@q * (1) Copyright and License.@>

@q This file is part of the OptiNum Grid Installer @>
@q Copyright (C) 2010, 2011, 2012, 2013 Gesellschaft fuer wissenschaftliche Datenverarbeitung mbH Goettingen @>

@q The OptiNum Grid Installer is free software; you can redistribute it and/or modify @>
@q it under the terms of the GNU General Public License as published by @>
@q the Free Software Foundation; either version 3 of the License, or @>
@q (at your option) any later version.  @>

@q The OptiNum Grid Installer is distributed in the hope that it will be useful, @>
@q but WITHOUT ANY WARRANTY; without even the implied warranty of @>
@q MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the @>
@q GNU General Public License for more details.  @>

@q You should have received a copy of the GNU General Public License          @>
@q along with the OptiNum Grid Installer; if not, write to the Free Software                    @>
@q Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA @>

@q ("@@" stands for a single at-sign in the following paragraph.) @>

@q Please send bug reports to Laurence.Finston@@gwdg.de@>

@q Laurence D. Finston                                                   @>
@q Gesellschaft fuer wissenschaftliche Datenverarbeitung mbH Goettingen  @>
@q Am Fassberg 11         					         @>
@q 37077 Goettingen              					 @>
@q Germany                           					 @>                                

@q Laurence.Finston@@gwdg.de (@@ stands for a single "at" sign.)@>

@q ** (2)  glblvrbl.web  @>
@* Global variables.

@q ** (2) Include files  @>

@ Include files.

@<Include files@>=
#include <stdlib.h>
#include <stdio.h>
#include <fstream>
#include <iomanip>
#include <ios>
#include <iostream>
#include <limits.h>
#include <map>
#include <string>
#include <time.h>
#include <math.h>
#include <sstream>   
#include <pthread.h>

#include <vector>

#if HAVE_CONFIG_H
#include <config.h>
#endif

#if IS_ROCKS_GOEGRID
#undef HAVE_LIBMYSQLCLIENT
#endif 

#include "entries.h++"
#include "dstngnmt.h++"

using namespace std;

@q * (1) Global Constants.  @>
@ Global Constants.
\initials{LDF Undated.}

\LOG
\initials{LDF 2009.10.12.}
Added |MAX_PROTOCOL|, |NULL_PROTOCOL|, |FTP_PROTOCOL|, |HTTP_PROTOCOL| and 
|HTTPS_PROTOCOL|.


\initials{LDF 2009.12.08.}
Added the |const strings|
|DEFAULT_CERT_FILENAME|,
|DEFAULT_KEY_FILENAME|,
|DEFAULT_CA_FILENAME|,
and
|DEFAULT_CRL_FILENAME|.

\initials{LDF 2010.02.10.}
Replaced 
|extern const string DEFAULT_PORT_STR| and 
|extern const int DEFAULT_PORT_NUM|
with separate ``|_AUTH|'' and ``|_NON_AUTH|'' variables.

\initials{LDF 2010.05.20.}
Made |string DEFAULT_CERT_FILENAME| and |string DEFAULT_KEY_FILENAME| variables rather 
than constants.  The default value should differ, depending on whether the client or server
is using them.

\initials{LDF 2010.05.21.}
Added 
|extern const unsigned int SHOW_USER_ENTRIES| 
and 
|extern const unsigned int SHOW_PUBLIC_ENTRIES|.

\initials{LDF 2010.07.01.}
Added |extern const string DEFAULT_LOG_FILENAME| and 
|extern const string DEFAULT_ERR_LOG_FILENAME|.

\initials{LDF 2011.06.30.}
Added conditionally compiled code for |DEFAULT_CA_FILENAME|.

\initials{LDF 2011.07.06.}
@:BUG FIX@> BUG FIX:  Removed conditionally compiled code for 
|DEFAULT_CA_FILENAME|.  The file \filename{/etc/grid-security/hostcert.pem}
isn't a CA certificate and it would only be present on a grid front-end, 
anyway. 

\initials{LDF 2011.07.06.}
Now including \filename{lclpaths.h}, which contains the declaration and 
initialization of |DEFAULT_CA_FILENAME|.  The value is now the file 
\filename{DFN-VereinPCAGrid-G01.pem} in the installation directory as determined 
by the configure script.  \filename{lclpaths.h} must therefore be generated by 
\.{make}.

\initials{LDF 2011.11.16.}
Removed |unsigned int MAX_BUFFER|.  Replaced it with 
|Scan_Parse_Parameter_Type::MAX_BUFFER|.  It must be set individually for 
each TLS connection, because the maximum number of bytes that 
|gnutls_record_send| can send at one time is negotiated during the connection 
handshake.

\initials{LDF 2011.11.17.}
Added |extern const string optinum_installer_gpg_pubkey_fingerprint|.

\initials{LDF 2011.11.21.}
Moved |string optinum_installer_gpg_pubkey_fingerprint| to |@<Global Variables@>|
and made it non-|const|.

\initials{LDF 2011.12.05.}
Put conditionally compiled code for |DEFAULT_CA_FILENAME| back.

\initials{LDF 2012.01.27.}
Removed |extern const unsigned int INVALID_UNSIGNED_INT|.  
It wasn't initialized and not used anywhere.
\ENDLOG 

@<Global Constants@>=

   extern const string DEFAULT_PORT_STR_AUTH = "5556";  /* The port to which 
                                                           users will be connecting 
                                                           with authentication.  */
   extern const int DEFAULT_PORT_NUM_AUTH    = 5556;  

   extern const string DEFAULT_PORT_STR_NON_AUTH = "5557";  /* the port to which 
                                                               users will be connecting 
                                                               without authentication.  */
   extern const int DEFAULT_PORT_NUM_NON_AUTH    = 5557;  


   extern const int MAX_PROTOCOL    = 4; /* This must be changed whenever protocols are added.  
                                            \initials{LDF 2009.10.12.}  */

   extern const int NULL_PROTOCOL   = 0;
   extern const int FTP_PROTOCOL    = 1;
   extern const int HTTP_PROTOCOL   = 2;
   extern const int HTTPS_PROTOCOL  = 3;

   extern const string DEFAULT_CRL_FILENAME  = "";

   extern const int MAX_FILENAME  = 128;
   extern const int MAX_USER_ID   = 128;

   extern const unsigned int SHOW_USER_ENTRIES   = 1;
   extern const unsigned int SHOW_PUBLIC_ENTRIES = 2;

   extern const string DEFAULT_LOG_FILENAME     = "/tmp/optdbcli.log";
   extern const string DEFAULT_ERR_LOG_FILENAME = "/tmp/optdbcli_error.log";

#if IS_PCFINSTON_GWDG

   extern const string DEFAULT_CA_FILENAME = "/home/lfinsto/DFN-VereinPCAGrid-G01.pem";

#elif IS_PCMOHR_GWDG

   extern const string DEFAULT_CA_FILENAME 
      = "/home/mmohr1/opt_repos/optinum/Installer/dbsrvcli/src/DFN-VereinPCAGrid-G01.pem";

#elif IS_OPTINUM_SRV | IS_ROCKS_GOEGRID

   extern const string DEFAULT_CA_FILENAME = "/opt/optinum/dbsrvcli/bin/DFN-VereinPCAGrid-G01.pem";

#elif IS_OPTINUM_DE

   extern const string DEFAULT_CA_FILENAME 
      = "/srv/www/fcgi-bin/certificates/DFN-VereinPCAGrid-G01.pem";

#else

   extern const string DEFAULT_CA_FILENAME = "";

#endif


@
@<|extern| declarations for global constants@>=

   extern const string DEFAULT_PORT_STR_AUTH;
   extern const int DEFAULT_PORT_NUM_AUTH;
   extern const string DEFAULT_PORT_STR_NON_AUTH;
   extern const int DEFAULT_PORT_NUM_NON_AUTH;

   extern const int MAX_PROTOCOL;
   extern const int NULL_PROTOCOL;
   extern const int FTP_PROTOCOL;
   extern const int HTTP_PROTOCOL;
   extern const int HTTPS_PROTOCOL;

   extern const string DEFAULT_CA_FILENAME;
   extern const string DEFAULT_CRL_FILENAME;

   extern const int MAX_FILENAME;
   extern const int MAX_USER_ID;

   extern const unsigned int SHOW_USER_ENTRIES;
   extern const unsigned int SHOW_PUBLIC_ENTRIES;

   extern const string DEFAULT_LOG_FILENAME;
   extern const string DEFAULT_ERR_LOG_FILENAME;

#if 0 
extern const unsigned int SECS_PER_DAY;
#endif 

@q * (1) Global Variables.  @>
@ Global Variables.
\initials{LDF 2009.09.28.}

\LOG
\initials{LDF 2009.09.28.}
Added this section.

\initials{LDF 2009.10.06.}
Removed |const unsigned int MAX_THREAD| 
and |bool wait_vector[MAX_THREAD]|.  Now detaching the
threads that are created and there's no need to 
limit the number of threads that are created.

\initials{LDF 2009.10.07.}
Added |bool save_temp_files|.  It's initialized to |false|.  It can be set to |true| 
by using the command-line option \.{save-temp-files}.

\initials{LDF 2009.10.07.}
Changed the type of |thread_ctr| from |int| to |unsigned int|.

\initials{LDF 2009.12.09.}
Added |int sleep_value|.

\initials{LDF 2009.12.18.}
Added |string output_filename|.

\initials{LDF 2009.12.18.}
Added |extern const int MAX_USER_ID = 128|.

\initials{LDF 2009.12.21.}
Added |map<string, string> dn_fields|.

\initials{LDF 2009.12.21.}
Added |bool is_client|.

\initials{LDF 2010.01.08.}
Added |pthread_mutex_t db_entries_mutex|.

\initials{LDF 2010.01.22.}
Added |bool is_server|.

\initials{LDF 2010.02.03.}
Added |ofstream output_file_strm|.

\initials{LDF 2010.02.09.}
Added the following variables.  They correspond to command-line options.\hfil\break 
|string distinguished_name|\hfil\break 
|vector<string> package_name|\hfil\break 
|vector<string> package_version|\hfil\break
|bool resolve_dependencies| (default |true|)\hfil\break 
|bool read_input|  (default |true|)\hfil\break 
|bool install| (default |false|)\hfil\break 
|bool fetch| (default |false|).

\initials{LDF 2010.02.10.}
Added |bool authenticated_connection| with the default |true|.

\initials{LDF 2010.02.10.}
Replaced |string port_str| with |port_str_auth| and |port_str_non_auth|
and |int port_num| with |port_num_auth| and |port_num_non_auth|.

\initials{LDF 2010.03.10.}
Changed |log_file| to |log_strm| and |log_file_mutex| to |err_log_file_mutex|.
Added |err_log_strm| and |err_log_mutex|.

\initials{LDF 2010.03.10.}
Added |int errors_occurred|.  It's initialized to 0.

\initials{LDF 2010.03.15.}
Added |int warnings_occurred|.  It's initialized to 0.

\initials{LDF 2010.03.19.}
Added |bool send_environment|.  It's initialized to |false| and only 
used by the client.  

\initials{LDF 2010.04.21.}
Added |string grid_mapfile_filename| with the default value 
|"/etc/grid-security/grid-mapfile"|.

\initials{LDF 2010.04.21.}
Added the |pthread_mutex_t| variables |db_users_mutex|,
|db_certificates_mutex| and |db_users_certificates_mutex|

\initials{LDF 2010.04.21.}
Added |vector<Distinguished_Name_Type> distinguished_name_vector|.

\initials{LDF 2010.04.22.}
Changed |string distinguished_name| to |string distinguished_name_str| and
added |Distinguished_Name_Type distinguished_name|.

\initials{LDF 2010.05.20.}
Made |string DEFAULT_CERT_FILENAME| and |string DEFAULT_KEY_FILENAME| variables rather 
than constants.  The default value should differ, depending on whether the client or server
is using them.

\initials{LDF 2010.06.10.}
Added |string effective_user_name|.

\initials{LDF 2010.06.11.}
Added |string log_filename| with the default value |"/tmp/optdbcli.log"| and 
|string err_log_filename| with the default value |"/tmp/optdbcli_error.log"|.

\initials{LDF 2010.06.30.}
Added |string effective_user_dn|.

\initials{LDF 2010.07.01.}
Removed |string effective_user_name| and |string effective_user_dn|.

\initials{LDF 2010.09.09.}
Added |pthread_mutex_t db_prerequisites_mutex|.

\initials{LDF 2011.05.06.}
Added |map<string, string> dn_username_map|.  It was formerly |static| and
local to \filename{instllfn.web}.

\initials{LDF 2011.05.18.}
Added the |vector<string>| variables |temp_file_vector| and 
|fifo_vector|.

\initials{LDF 2011.06.30.}
Removed |bool read_input|.  It's no longer needed.

\initials{LDF 2011.08.10.}
Added |bool suppress_links| with the default |false|.

\initials{LDF 2011.11.16.}
Added |vector<string> globus_site_map|;

\initials{LDF 2011.11.21.}
Moved |string optinum_installer_gpg_pubkey_fingerprint| from |@<Global Constants@>|
to this section and made it non-|const|.

\initials{LDF 2011.11.21.}
Added |pthread_mutex_t global_variable_mutex|.

\initials{LDF 2011.11.21.}
Changed type of |globus_site_map| from |vector<string>| to 
|map<string, bool>|.

\initials{LDF 2011.12.06.}
Added |string gpg_homedir|.

\initials{LDF 2012.01.05.}
Added |pthread_mutex_t session_data_mutex|.

\initials{LDF 2012.01.12.}
Added |int trace_value| with the default value 0.  It's set 
by the \.{--trace} option.

\initials{LDF 2012.02.03.}
Added |int prerequisites_reinstall_value| with the default value 0.  It's set 
by the options \.{--prerequisites-reinstall} 
and \.{--no-prerequisites-reinstall} 

\initials{LDF 2012.02.08.}
Replaced |bool suppress_links| with |signed int create_links_value|.

\initials{LDF 2012.02.08.}
Added |string link_directory|.

\initials{LDF 2012.02.29.}
Now declaring mutexes for the database in conditionally compiled code.

\initials{LDF 2012.03.16.}
Removed |bool send_environment|.  It's no longer needed.

\initials{LDF 2012.03.19.}
Added |string> globus_site|.  It's set by means of the \.{--globus-site} option.

\initials{LDF 2012.05.10.}
Removed |pthread_mutex_t db_users_certificates_mutex|.

\initials{LDF 2012.05.11.}
Removed the |pthread_mutex_t| variables |db_certificates_mutex|, |db_users_mutex|.
|db_entries_mutex| and |db_prerequisites_mutex|.

\initials{LDF 2012.05.15.}
Added |bool scanner_trace| and |bool parser_trace|.  
|scanner_trace| is set by the (synonymous) command-line options \.{flex-trace} 
and \.{scanner-trace} while |parser_trace| is set by the (synonymous) 
command-line options \.{bison-trace} and \.{parser-trace}.
\ENDLOG 

@q ** (2) Code.  @>

@<Global Variables@>=

    unsigned int thread_ctr = 0;

    pthread_mutex_t thread_ctr_mutex;
    pthread_mutex_t cerr_mutex;

    pthread_mutex_t global_variable_mutex;

    pthread_mutex_t session_data_mutex;

    ofstream output_file_strm;
    ofstream log_strm;
    ofstream err_log_strm;

    pthread_mutex_t log_strm_mutex;
    pthread_mutex_t err_log_strm_mutex;

    string server_ip_address = "";
    string input_filename = "";
    string output_filename = "";

    string port_str_auth     = "";
    string port_str_non_auth = "";

    int port_num_auth     = 0;
    int port_num_non_auth = 0;

    bool save_temp_files = false;

    string owner_certificate = "";

    int sleep_value = 0;  /* For debugging.  \initials{LDF 2009.12.09.}   */

    map<string, string> dn_fields;

    map<string, string> dn_username_map;

    bool is_client;
    bool is_server;

    string DEFAULT_CERT_FILENAME;
    string DEFAULT_KEY_FILENAME;

    string log_filename       = "";
    string err_log_filename = "";

    signed int create_links_value = 0;

    string link_directory;

    string globus_site;

    map<string, bool> globus_site_map;

    string optinum_installer_gpg_pubkey_fingerprint;

    string gpg_homedir;

    int trace_value = 0;

    bool scanner_trace = false;
    bool parser_trace  = false;

    int prerequisites_reinstall_value = 0;

@q ** (2) @>

@ |string distinguished_name_str| and |Distinguished_Name_Type distinguished_name| 
are used by the client only.  |distinguished_name_str| is extracted from the proxy credential,
if one is specified using the \.{--proxy-credential} option.
\initials{LDF 2010.04.22.}
Revised \initials{LDF 2012.02.27.}
\par
|string grid_mapfile_filename| is used by the server.  
The value of to which it is initialized here is the default.  
It can be reset by using the command-line option \.{--grid-mapfile}.
\initials{LDF 2010.04.22.}

\LOG
\initials{LDF 2010.05.21.}
Added |unsigned int show_value|.  It's initialized to 0.

\initials{LDF 2010.07.21.}
Added |bool download_fail_continue| and |bool install_fail_continue| 
with the default value |false|.  These variables are set by corresponding 
command-line options.

\initials{LDF 2010.09.08.}
Added |bool reinstall_flag| with the default value |false|.  
It's set to |true| by the \.{--reinstall} option.

\initials{LDF 2011.04.13.}
Added |string scrinstl_path|.

\initials{LDF 2011.04.15.}
Added |string install_directory|.

\initials{LDF 2011.04.29.}
Removed |string scrinstl_path|.

\initials{LDF 2011.05.25.}
Added |string proxy_cert_filename| and |bool proxy_cert_verified = false|.  The value 
of the latter is only ever tested if the client tries to install a package on the basis of
an encrypted entry.

\initials{LDF 2011.06.01.}
Moved the declarations of the |vector<string>| variables |cert_filenames|,
|key_filenames|, |ca_filenames|, and |crl_filenames| from \filename{cmdlnopt.web}
to this file.

\initials{LDF 2011.06.30.}
Changed the default of |bool authenticated_connection| to |false|.

\initials{LDF 2011.09.26.}
Added |string transfer_proxy_cert_filename| and |bool transfer_proxy_cert|.

\initials{LDF 2011.12.22.}
Added |string session_id| (for client only).

\initials{LDF 2012.02.27.}
Removed |unsigned int show_value|.  It's no longer needed.
\ENDLOG 

@q ** (2) @>

@<Global Variables@>=

   string distinguished_name_str;  

   Distinguished_Name_Type distinguished_name;

   vector<Distinguished_Name_Type> distinguished_name_vector;

   /* !! TODO:  LDF 2011.07.22.  This is provisional.  Change when
      \.{InstallStarter} passes the \filename{grid-mapfile} 
      to \.{optdbcli}.  */

@q ** (2) grid-mapfile.  @>
@ grid-mapfile.  
\initials{LDF 2011.07.22.}

The \filename{grid-mapfile} is a problem.  
The client program \.{optdbcli} is compiled on \.{optinum-srv.gwdg.de} for
use on \.{rocks-goegrid.gwdg.de}.  The former is the grid front-end and 
the latter is the cluster front-end.  The \.{grid-mapfile} is not present on 
\.{rocks-goegrid.gwdg.de} unless it's copied to it from \.{optinum-srv.gwdg.de}.
This will be done by the \.{InstallStarter} program, but this doesn't work yet.
The conditionally compiled code here is therefore provisional.
@:TODO@> !! TODO:  Change this, when \.{InstallStarter} passes the \.{grid-mapfile}

\LOG
\initials{LDF 2011.08.03.}
Now setting |grid_mapfile_filename| to \filename{/opt/optinum/dbsrvcli/grid-mapfile} 
when building the packages on \.{optinum-srv.gwdg.de}.  Previously, it didn't work,
because \.{optdbcli} is called on \.{rocks-goegrid.gwdg.de}, but built 
on \.{optinum-srv.gwdg.de}, so that |grid_mapfile_filename| had the wrong value.
\ENDLOG 

@<Global Variables@>=

#if IS_OPTINUM_SRV | IS_ROCKS /* Compiling on optinum-srv.gwdg.de for invocation
                                 on rocks-goegrid.gwdg.de.  For \.{optdbcli}.
                                 LDF 2011.07.22.  */

   string grid_mapfile_filename = "/opt/optinum/dbsrvcli/grid-mapfile";  

@ @:TODO@> !! TODO:  This is a temporary measure.  Do something about updating 
the \.{grid-mapfile} on \.{optinum.de} regularly.
\initials{LDF 2011.07.22.}  

@<Global Variables@>=

#elif IS_OPTINUM_DE 

   string grid_mapfile_filename = "/home/lfinsto/opt_rep/Installer/dbsrvcli/src/grid-mapfile";

@
@<Global Variables@>=

#elif IS_PCFINSTON_GWDG

   string grid_mapfile_filename 
      = "/home/lfinsto/opt_rep/optinum/Installer/dbsrvcli/src/grid-mapfile";  

@ Any other hosts.  This is just a placeholder value.  In this case, 
\.{optdbcli} should be called using the \.{--grid-mapfile} option, unless
the file \.{/etc/grid-security/grid-mapfile} exists and contains the desired 
values.  It might, if Globus Toolkit has been installed on the host in
question.  However, if it uses the ``Simple CA'', the \.{grid-mapfile} will
not contain the proper entries, so a different one will need to be used, 
as I do for my test installation on \.{pcfinston.gwdg.de} (see above).
\initials{LDF 2011.07.22.}

@:TODO@> !! TODO:  Add a case for \.{faui3cluster.informatik.uni-erlangen.de}
(macro |IS_FAUI3CLUSTER|).  \.{optdbcli} hasn't
been tested on that host at all.  It may need a solution like the one for 
\.{rocks-goegrid.gwdg.de} (see above).  However, the situation may be more
complicated, since the cluster end nodes may be configured differently from the
cluster front-end.  With \.{rocks-goegrid.gwdg.de}, the configurations are
similar, if not identical.
\initials{LDF 2011.07.22.}

@<Global Variables@>=

#else 

   string grid_mapfile_filename = "/etc/grid-security/grid-mapfile";  

#endif

@q ** (2) @>
@
@<Global Variables@>=

   vector<string> package_names;
   vector<string> package_versions;
   bool resolve_dependencies = true;

   bool install    = false;
   bool fetch      = false;

   bool authenticated_connection = false;

   int errors_occurred = 0;
   int warnings_occurred = 0;

   bool download_fail_continue = false;
   bool install_fail_continue  = false;
   bool reinstall_flag         = false;

   string install_directory;

   vector<string> temp_file_vector;
   vector<string> fifo_vector;

   string proxy_cred_filename;

   bool transfer_proxy_cred = false;

   string transfer_proxy_cred_filename;

   bool proxy_cred_verified = false;

   vector<string> cert_filenames;
   vector<string> key_filenames;
   vector<string> ca_filenames;   /* For server only, unless the client
                                     needs to verify a proxy credential.
                                     In this case, only the first one is used.
                                     \initials{LDF 2011.06.01.}  */

   vector<string> crl_filenames;  /* For server only  */


   string session_id;  /* For client only  */

@q ** (2) Extern declarations for global variables.  @>

@ Extern declarations for global variables.  
\initials{LDF 2009.09.28.}

@<|extern| declarations for global variables@>=

   extern unsigned int thread_ctr;
   extern pthread_mutex_t thread_ctr_mutex;

   extern pthread_mutex_t cerr_mutex;

   extern pthread_mutex_t global_variable_mutex;
   extern pthread_mutex_t session_data_mutex;

   extern ofstream log_strm;
   extern ofstream err_log_strm;

   extern ofstream output_file_strm;

   extern pthread_mutex_t log_strm_mutex;
   extern pthread_mutex_t err_log_strm_mutex;

   extern string server_ip_address;
   extern string input_filename;
   extern string output_filename;

   extern string port_str_auth;
   extern string port_str_non_auth;

   extern int port_num_auth;
   extern int port_num_non_auth;

   extern bool save_temp_files;

   extern string owner_certificate;

   extern int sleep_value;

   extern map<string, string> dn_fields;

   extern map<string, string> dn_username_map;

   extern bool is_client;
   extern bool is_server;

   extern string distinguished_name_str;

   extern Distinguished_Name_Type distinguished_name;

   extern string grid_mapfile_filename;

   extern vector<Distinguished_Name_Type> distinguished_name_vector;

   extern vector<string> package_names;

   extern vector<string> package_versions;

   extern bool resolve_dependencies;

   extern bool install;

   extern bool fetch;

   extern bool authenticated_connection;

   extern int errors_occurred;

   extern int warnings_occurred;

   extern string DEFAULT_CERT_FILENAME;
   extern string DEFAULT_KEY_FILENAME;

   extern string log_filename;
   extern string err_log_filename;

   extern bool download_fail_continue;
   extern bool install_fail_continue;

   extern bool reinstall_flag;

   extern string install_directory;

   extern vector<string> temp_file_vector;
   extern vector<string> fifo_vector;

   extern string proxy_cred_filename;
   extern string transfer_proxy_cred_filename;

   extern bool transfer_proxy_cred;

   extern bool proxy_cred_verified;

   extern vector<string> cert_filenames;
   extern vector<string> key_filenames;
   extern vector<string> ca_filenames;  /* For server only  */
   extern vector<string> crl_filenames;  /* For server only  */

   extern signed int create_links_value;

   extern string link_directory;

   extern string globus_site;

   extern map<string, bool> globus_site_map;

   extern string optinum_installer_gpg_pubkey_fingerprint;

   extern string gpg_homedir;

   extern string session_id;  /* For client only  */

   extern int trace_value;

   extern bool scanner_trace;
   extern bool parser_trace;

   extern int prerequisites_reinstall_value;

@q * (1) Forward declarations.  @>
@ Forward declarations.

\LOG
\initials{LDF 2008.07.08.}
Added this section.
\ENDLOG

@<Forward declarations@>=

   struct Scan_Parse_Parameter_Type;
   struct Distinguished_Name_Type;
   struct X509_Cert_Type;
   struct Entry_Type;

@q ** (2) Putting `glblvrbl.web' together.  @>

@ Putting {\tt glblvrbl\PERIOD web} together.

@q *** (3) This is what's compiled.  @>

This is what's compiled.  
\initials{LDF 2008.07.23.}

\LOG
\initials{LDF Undated.}
Now defining the preprocessor macro |_GNU_SOURCE| in the compiled code 
and in the header file.  It's needed for |pthread_timedjoin_np|.
\ENDLOG 

@c
@<Include files@>@;@/

#ifndef _GNU_SOURCE
#define _GNU_SOURCE
#endif 

@<Global Constants@>@;@/
@<Global Variables@>@;@/
@<Forward declarations@>@;@/

@q *** (3) This is what's written to the header file.  @>

@ This is what's written to the header file.  
\initials{LDF 2008.07.23.}


@(glblvrbl.h@>=

#ifndef GLBLVRBL_H
#define GLBLVRBL_H 1
#ifndef _GNU_SOURCE
#define _GNU_SOURCE
#endif 

using namespace std;
@<|extern| declarations for global constants@>@;@/
@<|extern| declarations for global variables@>@;@/
@<Forward declarations@>@;@/
#endif 

@q * (1) Emacs-Lisp code for use in indirect buffers  @>

@q (progn (cweb-mode) (outline-minor-mode) (abbrev-mode t))           @>

@q * (1) Local variables for Emacs @>

@q Local Variables: @>
@q mode:CWEB @>
@q eval:(display-time) @>
@q abbrev-mode: t @>
@q eval:(read-abbrev-file) @>
@q indent-tabs-mode:nil @>
@q eval:(outline-minor-mode) @>
@q fill-column:80 @>
@q End: @>





