@q instchwn.web  @>
@q [...]/optinum/Installer/dbsrvcli/src/instchwn.web  @>

@q Created by Laurence D. Finston (LDF) Thu Oct 13 10:36:22 CEST 2011 @>

@q * (1) Top @>

@q * (1) Copyright and License.@>

@q This file is part of the OptiNum Grid Installer @>
@q Copyright (C) 2010, 2011, 2012, 2013 Gesellschaft fuer wissenschaftliche Datenverarbeitung mbH Goettingen @>

@q The OptiNum Grid Installer is free software; you can redistribute it and/or modify @>
@q it under the terms of the GNU General Public License as published by @>
@q the Free Software Foundation; either version 3 of the License, or @>
@q (at your option) any later version.  @>

@q The OptiNum Grid Installer is distributed in the hope that it will be useful, @>
@q but WITHOUT ANY WARRANTY; without even the implied warranty of @>
@q MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the @>
@q GNU General Public License for more details.  @>

@q You should have received a copy of the GNU General Public License          @>
@q along with the OptiNum Grid Installer; if not, write to the Free Software                    @>
@q Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA @>

@q ("@@" stands for a single at-sign in the following paragraph.) @>

@q Please send bug reports to Laurence.Finston@@gwdg.de@>

@q Laurence D. Finston                                                   @>
@q Gesellschaft fuer wissenschaftliche Datenverarbeitung mbH Goettingen  @>
@q Am Fassberg 11         					         @>
@q 37077 Goettingen              					 @>
@q Germany                           					 @>                                

@q Laurence.Finston@@gwdg.de (@@ stands for a single "at" sign.)@>

@q * (0) (instchwn.web).  @>

@*  (instchwn\PERIOD web).  Change owner for installed files.

@ Version control identifier.
@<Version control identifier@>=
static char version_control_id[] 
   = "$Id: instchwn.web 8356 2012-05-25 08:01:31Z finston $";
  
@q ** (2) Include files  @>

@ Include files.

@<Include files@>=

#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <pwd.h>

#if 0 
#include <sys/stat.h>
#endif 

#include <stdio.h>
#include <stdlib.h>

#include <errno.h>

#if 0
#include <time.h>
#endif 


#include <iomanip>
#include <ios>
#include <iostream>
#include <fstream>
#include <sstream>   
#include <string>

#if HAVE_CONFIG_H
#include <config.h>
#endif

#if IS_ROCKS_GOEGRID
#undef HAVE_LIBMYSQLCLIENT
#endif 

#ifndef _XOPEN_SOURCE
#define _XOPEN_SOURCE
#endif 

@q ** (2) |main| definition.@>
@ {\bf main} definition.
\initials{LDF 2011.10.13.}

\LOG
\initials{LDF 2011.10.13.}
Added this function.

\initials{LDF 2011.10.18.}
@:BUG FIX@> BUG FIX:  Added |int optinum_group_id| and conditionally 
compiled code for setting it.
\ENDLOG

@q *** (3) @>

@<|main| definition@>=
int 
main(int argc, char** argv)
{

@q **** (4) @>

    bool DEBUG = false;  /* |true|  */

    int status;

    int optinum_group_id = -1;

#if IS_PCFINSTON_GWDG
   
    optinum_group_id = 1003;

#elif IS_OPTINUM_SRV

    optinum_group_id = 301022;

#endif

@q **** (4) @>

    if (DEBUG)
    {
        cerr << "Entering `instchwn'." << endl;

#if 0 /* 1  */
    cerr << "Going to sleep for 20 seconds ... ";
    sleep(20);
#endif 


    } /* |if (DEBUG)|  */  
    

@q **** (4) @>
@
\LOG
\initials{LDF 2011.10.27.}
Added this section.
\ENDLOG

@<|main| definition@>=

   FILE *fp;

   for (int i = 1; i <= 2; ++i)
   {
       fp = fopen(argv[i], "r");

       if (fp == 0)
       {
           cerr << "ERROR!  In `main' (`instchwn'):  "
                << "Failed to open file `" << argv[i] << "' for reading:"
                << endl
                << strerror(errno) << endl
                << "Exiting program with exit status 1."
                << endl;


           exit(1);

       }
       else if (DEBUG)
       {
           cerr << "In `main' (`instchwn'):  "
                << "Opened file `" << argv[i] << "' for reading successfully."
                << endl;

       }  /* |else if (DEBUG)|  */ 

       fclose(fp);
          
       fp = 0;

   }  /* |for|  */   

@q **** (4) @>
@
@<|main| definition@>=

   string new_owner = getenv("SUDO_USER");

   if (new_owner.empty())
   {
        cerr << "ERROR!  In `main' (`instchwn'):  `SUDO_USER' not set.  "
             << "Can't change owner of file or files."
             << endl 
             << "Exiting `instchwn' unsuccessfully with exit status 1."
             << endl;

        exit(1);

   }  /* |if (new_owner.empty())|  */

   struct passwd pwbuf;
    
   char buf[sysconf(_SC_GETPW_R_SIZE_MAX)]; 

   struct passwd *pwbufp;

   status = getpwnam_r(new_owner.c_str(), &pwbuf,
                   buf, sysconf(_SC_GETPW_R_SIZE_MAX), &pwbufp);

   if (DEBUG)
   {

       cerr << "In `main' (`instchwn'):" << endl 
            << "`getpwuid_r' returned `" << status << "'" << endl
            << "`pwbuf.pw_name' == " << pwbuf.pw_name << endl
            << "`pwbuf.pw_uid' == " << pwbuf.pw_uid << endl
            << "getenv(\"SUDO_USER\") == " << getenv("SUDO_USER") << endl;


   }  /* |if (DEBUG)|  */ 

@q **** (4) @>
@
@<|main| definition@>=

   for (int i = 1; i <= 2; ++i)
   {
   
       if (DEBUG)
          cerr << "Changing owner of `" << argv[i] << "'" << endl;

       status = chown(argv[i], pwbuf.pw_uid, optinum_group_id);  

       if (status != 0)
       {
           cerr << "ERROR!  In `main' (`instchwn'):  Failed to change owner of file `" 
                << argv[i] << "' to `" << new_owner << "'."
                << endl
                << "Exiting program with exit status 1."
                << endl;

           exit(1);

       }
       else if (DEBUG)
       {
           cerr << "In `instchwn':  Changed owner of " << argv[i] << " to `" 
                << new_owner << "' " 
                << "successfully."
                << endl;

       }  /* |else if (DEBUG)|  */ 

   }  /* |for|  */   

@q **** (4) @>
@
@<|main| definition@>=

    if (DEBUG)
    {
        cerr << "Exiting `instchwn' successfully with exit status 0." 
             << endl;

    } /* |if (DEBUG)|  */ 

    return 0;

}  /* End of |main| definition  */

@q ** (2) Garbage.  @>
@
@<Garbage@>=
#if 0
#endif

@q ** (2) Putting  together.@>

@ Putting  together.

@c
@<Include files@>@;@/
using namespace std;
@<Version control identifier@>@;@/
@<|main| definition@>@;@/


#if 0 /* 1 */ 
@<Garbage@>@;@/
#endif 

@q (progn (cweb-mode) (outline-minor-mode))   @>

@q * (1) Local variables for Emacs @>

@q * Local variables for Emacs.@>
@q Local Variables: @>
@q mode:CWEB @>
@q eval:(display-time) @>
@q abbrev-mode:t @>
@q eval:(read-abbrev-file) @>
@q indent-tabs-mode:nil @>
@q eval:(outline-minor-mode) @>
@q fill-column:80 @>
@q End: @>

