@c hdinstrf.texi

@c Created by Laurence D. Finston (LDF) Thu Mar  8 17:10:44 CET 2012

@c This file is part of the Optinum Grid Installer User and Reference Manual.

@c Copyright (C) 2012, 2013 Gesellschaft fuer wissenschaftliche Datenverarbeitung mbh Goettingen

@c Author:  Laurence D. Finston (LDF)

@c See the section "GNU Free Documentation License" in the file 
@c fdl.texi for copying conditions.

@c ** (2) Hidden Installation Reference (scrinstl)

@node Hidden Installation Reference (scrinstl), Auxiliary Program and Shellscript Reference, Thread Function Reference, Top

@chapter Hidden Installation Reference (scrinstl)

@menu
* Global Variables (scrinstl)::
* Global Functions (scrinstl)::
* Distinguished_Name_Type (scrinstl)::
* Parameter_Type (scrinstl)::
@end menu

@c *** (3) Global Variables (scrinstl)
@node Global Variables (scrinstl), Global Functions (scrinstl), , Hidden Installation Reference (scrinstl)

@section Global Variables

@deftypevar {vector<string>} delete_files
@end deftypevar

@deftypevar char {process_owner_dir[128]}
@end deftypevar


@deftypevar bool proxy_cred_verified
Default @code{false}.
@end deftypevar

@deftypevar  pthread_mutex_t cerr_mutex
@end deftypevar


@deftypevar string grid_mapfile_filename
Default set by means of conditionally compiled code, based on the
Globus front-end, on which @samp{scrinstl} will be running.
@end deftypevar

@c *** (3) Global Functions (scrinstl)
@node Global Functions (scrinstl), , Global Variables (scrinstl), Hidden Installation Reference (scrinstl)

@section Global Functions


@deftypefun int main (int @var{argc}, char @var{**argv})
Defined in @file{scrinstl.web}.
@end deftypefun
  
@deftypefun void finish (void)
Defined in @file{scrinstl.web}.
@end deftypefun

@deftypefun {void*} connect_func (void @var{*v})
Defined in @file{cnnctfnc.web}.
@end deftypefun

@deftypefun {void*} wait_func (void @var{*v})
Defined in @file{cnnctfnc.web}.
@end deftypefun

@deftypefun int handle_proxy_cred (string @var{proxy_cred_filename}, string @var{ca_cert_filename})
Defined in @file{hdprxcrt.web}.

Return values:
@table @asis
@item 0
Success

@item 1
Local proxy credential filename is empty

@item 2
Failed to open local proxy credential file

@item 3
@command{popen} error:  Call to @command{certtool} failed

@item 4
@command{fread} error:  Failed to read output of @command{certtool}.

@item 5
Too many characters in @command{certtool} output (@math{> 1048575})

@item 6
Failed to verify certificate chain:  Expired

@item 7
Failed to verify certificate chain:  Other reason

@item 8
@command{popen} error:  Call to @samp{certtool -i} failed

@item 9
@command{fread} error:  Failed to read output of @samp{certtool -i}

@item 10
Failed to find ``Validity'' information in proxy credential

@item 11
Failed to find ``Validity:  Not Before'' information in proxy credential

@item 12
Failed to find ``Validity:  Not After'' information in proxy credential

@item 13
@command{popen} error:  Calls to @command{date} failed

@item 14
@command{fscanf} or @command{getline} error:  Failed to read output of calls to @command{date}

@item 15
Failed to set time in ``seconds since the epoch'' correctly

@item 16
proxy credential not yet valid:  Present time @math{<} ``Not Before'' value

@item 17
proxy credential expired:  Present time @math{>} ``Not After'' value
@end table
@end deftypefun

@deftypefun int gen_enc_rd_str (string @var{owner}, {char *} @var{buffer_enc}, size_t @var{size_enc}, @
                                {char *} @var{buffer_pln}, size_t @var{size_pln})
Generate encrypted random string.  Defined in @file{rdmstrfs.web}.
Currently not used.  A random string generated by this function can be
used in a ``handshake'' procedure between @samp{scrinstl} and @samp{optdbcli}.
@end deftypefun

@deftypefun void show_user_info (int {@var{uid} = 0}, {const char *} {@var{name} = 0}, {const char *} {@var{message} = 0})
Defined in @file{utilfncs.web}.
@end deftypefun

@deftypefun int get_uid ({char *} @var{name}, {char *} @var{dir})
Defined in @file{utilfncs.web}.
@end deftypefun

@deftypefun {const char*} get_dir (uid_t @var{uid})
Defined in @file{utilfncs.web}.
@end deftypefun

@deftypefun {const char*} get_name (uid_t @var{uid})
@end deftypefun

@deftypefun int decrypt (string @var{in_filename}, {unsigned int} @var{key_id}, {char *} {@var{buffer} = 0}, @
                         size_t {@var{size} = 0}, string {@var{out_filename} = ""})
@end deftypefun

@deftypefun int check_checksum (string @var{filename}, string @var{checksum})
@end deftypefun

@deftypefn {inline functions} void lock_cerr_mutex (void)
@deftypefnx {} void unlock_cerr_mutex (void)
@end deftypefn

@deftypefun void delete_temp_files ({void *} @var{v})
@end deftypefun

@deftypefun void wait_for_child_processes ({void *} @var{v})
@end deftypefun

@deftypefun string get_datestamp (void)
@end deftypefun

@deftypefun int check_distinguished_name (string @var{caller}, string @var{caller_dn})
@end deftypefun

@c *** (3) Distinguished_Name_Type (scrinstl)
@node Distinguished_Name_Type (scrinstl), Parameter_Type (scrinstl), , Hidden Installation Reference (scrinstl)

@section Distinguished_Name_Type

@tindex struct Distinguished_Name_Type
@tindex Distinguished_Name_Type, struct 
@code{struct Distinguished_Name_Type} is defined in @file{dstngnmt.web}.
It is nearly identical to @code{class Distinguished_Name_Type} from 
the @samp{dbsrvcli} (i.e., @samp{optdbcli/optdbsrv}) package.
@xref{Distinguished_Name_Type Reference}.  Aside from
@code{Distinguished_Name_Type} being declared as a @code{class} in
@samp{dbsrvcli} and as a @code{struct} in @samp{scrinstl}, the version
in @samp{dbsrvcli} has @code{friend} declarations for functions that
only exist in that package, and a couple of member functions that
aren't needed in @samp{scrinstl}.

@menu
* Distinguished_Name_Type Data Members (scrinstl)::
* Distinguished_Name_Type Member Functions (scrinstl)::
@end menu


@c *** (3)
@node Distinguished_Name_Type Data Members (scrinstl), Distinguished_Name_Type Member Functions (scrinstl), , Distinguished_Name_Type (scrinstl)

@subsection Distinguished_Name_Type Data Members

@vindex Distinguished_Name_Type::organization (scrinstl)
@vindex Distinguished_Name_Type::organization (scrinstl)
@vindex Distinguished_Name_Type::organizationalUnitName (scrinstl) 
@vindex Distinguished_Name_Type::commonName (scrinstl)              
@vindex Distinguished_Name_Type::countryName (scrinstl)             
@vindex Distinguished_Name_Type::localityName (scrinstl)        
@vindex Distinguished_Name_Type::stateOrProvinceName (scrinstl) 
@vindex Distinguished_Name_Type::user_name (scrinstl)           
@vindex Distinguished_Name_Type::user_id (scrinstl)                
@c
@vindex organization (Distinguished_Name_Type) (scrinstl)
@vindex organization (Distinguished_Name_Type) (scrinstl)
@vindex organizationalUnitName (Distinguished_Name_Type) (scrinstl)
@vindex commonName (Distinguished_Name_Type) (scrinstl)
@vindex countryName (Distinguished_Name_Type) (scrinstl)
@vindex localityName (Distinguished_Name_Type) (scrinstl)
@vindex stateOrProvinceName (Distinguished_Name_Type) (scrinstl)
@vindex user_name (Distinguished_Name_Type) (scrinstl)
@vindex user_id (Distinguished_Name_Type) (scrinstl)
@c 
@deftypevr {Public variables} string organization
@deftypevrx {} string organization
@deftypevrx {} string organizationalUnitName  
@deftypevrx {} string commonName              
@deftypevrx {} string countryName             
@deftypevrx {} string localityName        
@deftypevrx {} string stateOrProvinceName 
@deftypevrx {} string user_name           
@deftypevrx {} int user_id                
@end deftypevr

@c *** (3)
@node Distinguished_Name_Type Member Functions (scrinstl), , Distinguished_Name_Type Data Members (scrinstl), Distinguished_Name_Type (scrinstl)

@subsection Distinguished_Name_Type Member Functions

@findex Distinguished_Name_Type (Constructor) (scrinstl)
@findex Distinguished_Name_Type::Distinguished_Name_Type (scrinstl)
@c
@deftypefn {Default constructor} void Distinguished_Name_Type (@code{void})
@end deftypefn

@findex Distinguished_Name_Type (Constructor) (scrinstl)
@findex Distinguished_Name_Type::Distinguished_Name_Type (scrinstl)
@c
@deftypefn {Constructor} void Distinguished_Name_Type @*@
                        (@code{string} oorganization, @*@
                        @code{string} oorganizationalUnitName = @code{""}, @*@
                        @code{string} ccommonName = @code{""}, @*@
                        @code{string} ccountryName = @code{""}, @*@
                        @code{string} llocalityName = @code{""}, @*@
                        @code{string} sstateOrProvinceName = @code{""}, @*@
                        @code{unsigned int} uuser_id = 0, @*@
                        @code{string} uuser_name = @code{""})
@end deftypefn

@findex set (Distinguished_Name_Type) (scrinstl)
@findex Distinguished_Name_Type::set (scrinstl)
@c
@deftypefun int set (string distinguished_name_str, string* user_name = 0)
@end deftypefun

@findex operator== (Distinguished_Name_Type) (scrinstl)
@findex Distinguished_Name_Type::operator== (scrinstl)
@c
@deftypefn {const Operator} bool operator== (const Distinguished_Name_Type @var{&d}) 
Equality operator.
@end deftypefn


@findex operator!= (Distinguished_Name_Type) (scrinstl)
@findex Distinguished_Name_Type::operator!= (scrinstl)
@c
@deftypefn {const Operator} bool operator!= (const Distinguished_Name_Type @var{&d}) 
Inequality operator.
@end deftypefn

@findex clear (Distinguished_Name_Type) (scrinstl)
@findex Distinguished_Name_Type::clear (scrinstl)
@c
@deftypefun void clear (void)
@end deftypefun

@findex show (Distinguished_Name_Type) (scrinstl)
@findex Distinguished_Name_Type::show (scrinstl)
@c
@deftypefn {const Function} void show (string {@var{s} = ""})
@end deftypefn

@c *** (3) Parameter_Type (scrinstl)
@node Parameter_Type (scrinstl), , Distinguished_Name_Type (scrinstl), Hidden Installation Reference (scrinstl)

@section Parameter_Type

@tindex struct Parameter_Type
@tindex Parameter_Type, struct 
@code{struct Parameter_Type} is defined in @file{paramtp.web}.  It is
currently only used for storing a file descriptor for a socket in its
sole data member @code{int sock}.  It has no member functions at
present.  It could therefore easily be dispensed with, but it may be
useful for something in the future.  For example, if more complex
communication between @samp{scrinstl} and @samp{optdbcli} becomes
necessary, an object of type @code{Parameter_Type} could be passed to
a scanner/parser pair as an argument to @code{yylex} and
@code{yyparse}, as this is done in other parts of the OptiNum
Installer package.

@menu
* Parameter_Type Data Members (scrinstl)::
@end menu

@c *** (3)
@node Parameter_Type Data Members (scrinstl), , , Parameter_Type (scrinstl)

@subsection Parameter_Type Data Members

@vindex Parameter_Type::sock
@c
@vindex sock (Parameter_Type)
@c
@deftypevr {Public variable} int sock
The socket returned by @code{accept} in the main accept loop in @code{main}.
@end deftypevr

@c * (1) Local Variables for Emacs
  
@c Local Variables:
@c mode:Texinfo
@c abbrev-mode:t
@c eval:(outline-minor-mode t)
@c outline-regexp:"@c *\\*+"
@c eval:(set (make-local-variable 'run-texi2dvi-on-file) "installer.texi")
@c End:
